#!/bin/bash

set -e

is_service_enabled () {
	service_name=$1

	if [[ $(systemctl is-enabled $service_name) = "enabled" ]]; then
		return 0
	else
		return 1
	fi
}

is_service_active () {
	service_name=$1

	if [[ $(systemctl is-active $service_name) = "active" ]]; then
		return 0
	else
		return 1
	fi
}

restart_service_with_prejudice () {
	service_name=$1

	systemctl kill --kill-who all --signal 9 "$service_name"
	systemctl restart "$service_name"
}


if [ $# -ne 2 ]; then
	echo "$0 CELERY_WORKER_NAME WORKER_INSTANCE"
	echo
	echo "e.g. $0 celery@loader_git.`hostname` loader_git"
	exit 2
fi

celery_name="$1"
worker_instance="$2"
service_name="swh-worker@${worker_instance}.service"

SWH_CONFIG_FILENAME="/etc/softwareheritage/${worker_instance}.yml"

if ! [ -e "$SWH_CONFIG_FILENAME" ]; then
	echo "Missing configuration $SWH_CONFIG_FILENAME" >&2
else
	export SWH_CONFIG_FILENAME
fi

if ! is_service_enabled "${service_name}"; then
	echo "Service ${service_name} not enabled; exiting" >&2
	exit 0
fi

if ! is_service_active "${service_name}"; then
	echo "Service ${service_name} inactive; starting" >&2
	systemctl start "${service_name}"
	exit 1
fi

ping_count=0
max_ping_attempts=5

while [ $ping_count -lt $max_ping_attempts ]; do
	ping_count=$((ping_count + 1))
	echo "Ping attempt number $ping_count..." >&2
	if swh scheduler celery-monitor --pattern "$celery_name" ping-workers >&2; then
		echo "Got an answer from $celery_name at attempt $ping_count; exiting" >&2
		exit 0
	fi
done


echo "$ping_count ping attempts failed; killing and restarting $service_name" >&2

restart_service_with_prejudice "$service_name"
exit 1
